on:
    push:
        branches:
            - dev
            - master
        tags:
            - v3
        paths-ignore:
        - README.md
        - CHANGELOG.md
        - .grenrc.yml

name: CrossMgr_Build

jobs:
    buildmac:
        name: MacOSX
        runs-on: macos-latest
        timeout-minutes: 120
        steps:
            - name: Display Ref
              uses: hmarr/debug-action
            - name: Setup Python environment
              uses: actions/setup-python@v5
              with:
                python-version: 3.10.*
            - name: Checkout code
              #uses: actions/checkout@master
              uses: actions/checkout@v4
            - name: Setup Environment
              run: |
                cd $GITHUB_WORKSPACE
                bash compile.sh -S
            - name: Build project
              run: |
                cd $GITHUB_WORKSPACE
                bash compile.sh -a -A
            - name: Production Release
              uses: "marvinpinto/action-automatic-releases@latest"
              if: startsWith(github.ref, 'refs/tags/v3')
              with:
                 repo_token: "${{ secrets.GITHUB_TOKEN }}"
                 prerelease: false
                 files: release/*
            - name: Dev Release
              uses: "marvinpinto/action-automatic-releases@latest"
              if: github.ref == 'refs/heads/dev'
              with:
                 repo_token: "${{ secrets.GITHUB_TOKEN }}"
                 automatic_release_tag: "latest"
                 prerelease: true
                 title: "Development Build"
                 files: release/*
    #~ buildlinux:
        #~ name: Linux
        #~ needs: buildmac
        #~ runs-on: ubuntu-20.04
        #~ steps:
            #~ - name: Setup Python environment
              #~ uses: actions/setup-python@v5
              #~ with:
                #~ python-version: 3.10.*
            #~ - name: Checkout code
              ##~ uses: actions/checkout@master
              #~ uses: actions/checkout@v4
            #~ - name: Linux Lib Install
              #~ run: |
                #~ cd $GITHUB_WORKSPACE
                #~ bash linuxdeps.sh
            #~ - name: Setup Environment
              #~ run: |
                #~ cd $GITHUB_WORKSPACE
                #~ bash compile.sh -S
            #~ - name: Build project
              #~ run: |
                #~ cd $GITHUB_WORKSPACE
                #~ bash compile.sh -a -A
            #~ - name: Production Release
              #~ uses: "marvinpinto/action-automatic-releases@latest"
              #~ if: startsWith(github.ref, 'refs/tags/v3')
              #~ with:
                 #~ repo_token: "${{ secrets.GITHUB_TOKEN }}"
                 #~ prerelease: false
                 #~ files: release/*
            #~ - name: Dev Release
              #~ uses: "marvinpinto/action-automatic-releases@latest"
              #~ if: github.ref == 'refs/heads/dev'
              #~ with:
                 #~ repo_token: "${{ secrets.GITHUB_TOKEN }}"
                 #~ automatic_release_tag: "latest"
                 #~ prerelease: true
                 #~ title: "Development Build"
                 #~ files: release/*
    buildwindows:
        name: Windows
        needs: buildmac
        runs-on: windows-latest
        timeout-minutes: 120
        steps:
            - name: Setup Python environment
              uses: actions/setup-python@v5
             with:
                python-version: 3.10.*
            - name: Checkout code
              #uses: actions/checkout@master
              uses: actions/checkout@v4
            - name: Setup Environment
              shell: powershell
              run: |
                cd $env:GITHUB_WORKSPACE
                .\compile.ps1 -setupenv
            - name: Build project
              shell: powershell
              run: |
                cd $env:GITHUB_WORKSPACE
                .\compile.ps1 -all -everything
            - name: VirusTotal Upload
              shell: powershell
              if: startsWith(github.ref, 'refs/tags/v3')
              run: |
                cd $env:GITHUB_WORKSPACE
                .\compile.ps1 -virus
            - name: Production Release
              uses: "marvinpinto/action-automatic-releases@latest"
              if: startsWith(github.ref, 'refs/tags/v3')
              with:
                 repo_token: "${{ secrets.GITHUB_TOKEN }}"
                 prerelease: false
                 files: release/*
            - name: Dev Release
              uses: "marvinpinto/action-automatic-releases@latest"
              if: github.ref == 'refs/heads/dev'
              with:
                 repo_token: "${{ secrets.GITHUB_TOKEN }}"
                 automatic_release_tag: "latest"
                 prerelease: true
                 title: "Development Build"
                 files: release/*
